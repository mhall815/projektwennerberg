version: '3.8'

services:
  #Docker Socket Proxy
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - projektwennerberg-net
    environment:
      # Only enable what is needed
      CONTAINERS: 1
      NODES: 1
      SERVICES: 1
      TASKS: 1
      SWARM: 1
      NETWORKS: 1
      EVENTS: 1
    deploy:
      placement:
        constraints:
          - node.role == manager

  # Reverse proxy
  traefik:
    image: traefik:v3.5
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik-data:/data
    command:
      # --- Provider Settings ---
      - "--providers.swarm=true"
      - "--providers.swarm.exposedbydefault=false"
      - "--providers.swarm.endpoint=tcp://docker-socket-proxy:2375"
      - "--entrypoints.web.address=:80"

      
    networks:
      - projektwennerberg-net
    deploy:
      placement:
        constraints:
          - node.role == manager
  authentik-proxy:
    image: ghcr.io/goauthentik/proxy:2025.6.3
    environment:
      # Set this to the URL of your authentik server
      - AUTHENTIK_HOST=https://auth.projektwennerberg.org
      - AUTHENTIK_INSECURE=false
      # Create an outpost in authentik, and use the token here
      - AUTHENTIK_TOKEN=file:///run/secrets/authentik_outpost_token
    secrets:
      - authentik_outpost_token
    networks:
      - projektwennerberg-net
    deploy:
      labels:
        - "traefik.enable=true"
        # --- Router for the outpost itself ---
        - "traefik.http.routers.authentik-proxy.rule=Host(`auth.projektwennerberg.org`) && PathPrefix(`/outpost.goauthentik.io/`)"
        - "traefik.http.routers.authentik-proxy.entrypoints=web"
        - "traefik.http.services.authentik-proxy.loadbalancer.server.port=9000"
        # --- Global ForwardAuth Middleware Definition ---
        - "traefik.http.middlewares.authentik.forwardauth.address=http://authentik-proxy:9000/outpost.goauthentik.io/auth/traefik"
        - "traefik.http.middlewares.authentik.forwardauth.trustForwardHeader=true"
        - "traefik.http.middlewares.authentik.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid"

  # Cloudflare Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN_FILE=/run/secrets/cloudflared_token
    secrets:
      - cloudflared_token
    networks:
      - projektwennerberg-net
    deploy:
      replicas: 1

  # Portainer
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   command: -H tcp://docker-socket-proxy:2375
  #   volumes:
  #     - portainer-data:/data
  #   networks:
  #     - projektwennerberg-net
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.portainer.rule=Host(`portainer.projektwennerberg.org`)"
  #       - "traefik.http.routers.portainer.entrypoints=websecure"
  #       - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
  #       - "traefik.http.services.portainer.loadbalancer.server.port=9000"

volumes:
  traefik-data:

secrets:
  cloudflared_token:
    external: true
  authentik_outpost_token: # You will need to create this secret
    external: true

networks:
  projektwennerberg-net:
    external: true